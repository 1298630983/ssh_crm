<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.2.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

    <!-- 读取db.properties文件 -->
    <context:property-placeholder location="classpath:db.properties" />
    <!--配置c3p0连接池-->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
        <property name="driverClass" value="${jdbc.driverClass}" ></property>
        <property name="user" value="${jdbc.user}" ></property>
        <property name="password" value="${jdbc.password}" ></property>
    </bean>

    <!--核心事务管理器-->
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!--配置通知-->
    <!--<tx:advice transaction-manager="transactionManager" id="txAdvice">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="*" isolation="REPEATABLE_READ" read-only="false" propagation="REQUIRED"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--配置将通知织入目标对象-->
    <!--<aop:config>-->
        <!--&lt;!&ndash;配置切点&ndash;&gt;-->
        <!--<aop:pointcut id="txPc" expression="execution(* cc.jasonos.service.*ServiceImpl.*(..))" />-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>-->
    <!--</aop:config>-->

    <!--开启注解事务-->
    <tx:annotation-driven/>

    <!--将SessionFactory配置到spring容器中-->
    <!--1.依旧使用外部hibernate配置信息-->
    <!--<bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">-->
        <!--<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>-->
    <!--</bean>-->

    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!--将连接池注入到sessionFactory中,hibernate会通过连接池获取连接-->
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <!--  必选配置 -->
                <!--<prop key="hibernate.connection.driver_class" >com.mysql.jdbc.Driver</prop>-->
                <!--<prop key="hibernate.connection.url" >jdbc:mysql:///crm_32</prop>-->
                <!--<prop key="hibernate.connection.username" >root</prop>-->
                <!--<prop key="hibernate.connection.password" >qweasd123..</prop>-->
                <prop key="hibernate.dialect" >org.hibernate.dialect.MySQLDialect</prop>

                <!--  可选配置 -->
                <prop key="hibernate.show_sql" >true</prop>
                <prop key="hibernate.format_sql" >true</prop>
                <prop key="hibernate.hbm2ddl.auto" >update</prop>
            </props>
        </property>
        <!-- 引入orm元数据,指定orm元数据所在的包路径,spring会自动读取包中的所有配置 -->
        <property name="mappingDirectoryLocations" value="classpath:cc/jasonos/domain" ></property>
    </bean>

    <bean name="userAction" class="cc.jasonos.web.action.UserAction" scope="prototype">
        <property name="us" ref="userService"></property>
    </bean>

    <bean name="userService" class="cc.jasonos.service.UserServiceImpl">
        <property name="ud" ref="userDao"></property>
    </bean>

    <bean name="userDao" class="cc.jasonos.dao.impl.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

</beans>